{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","usersFromServer","find","el","className","href","TodoInfo","todo","classNames","TodoList","todos","map","App","useState","todosFromServer","setTodos","task","setTask","setUser","newTitle","setNewTitle","hasTitleError","setHasTitleError","selectedUser","setSelectedUser","hasUserError","setHasUserError","useEffect","action","method","type","placeholder","value","onChange","e","currentTarget","onClick","preventDefault","currentTodos","largest","sort","a","b","length","searchedUser","push","handleAdd","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20abba16.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  userId: number;\n};\n\nexport const UserInfo: React.FC<Props> = ({ userId }) => {\n  const user = usersFromServer.find((el: User) => el.id === userId);\n\n  return (\n    <>\n      {user\n        && (\n          <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n            {user.name}\n          </a>\n        )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <article\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': todo.completed })\n      }\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo userId={todo.userId} />\n    </article>\n  </>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <>\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  </>\n);\n","import './App.scss';\n\nimport { useEffect, useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const App = () => {\n  const [todos, setTodos] = useState([...todosFromServer]);\n  const [task, setTask] = useState('');\n  const [user, setUser] = useState('Choose a user');\n  const [newTitle, setNewTitle] = useState(true);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(true);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleAdd = () => {\n    setHasTitleError(!newTitle);\n    setHasUserError(!selectedUser);\n\n    const currentTodos = [...todos];\n\n    if (newTitle && selectedUser) {\n      const largest = currentTodos\n        .sort((a, b) => a.id - b.id)[currentTodos.length - 1];\n\n      const searchedUser = usersFromServer.find(el => el.name === user);\n\n      const userId = searchedUser ? searchedUser.id : 0;\n\n      const todo = {\n        id: largest.id + 1,\n        title: task,\n        completed: false,\n        userId,\n      };\n\n      currentTodos.push(todo);\n      setTodos(currentTodos);\n      setTask('');\n      setUser('Choose a user');\n      setNewTitle(false);\n      setSelectedUser(false);\n    }\n  };\n\n  useEffect(() => {\n    if (task !== '') {\n      setNewTitle(true);\n    } else {\n      setNewTitle(false);\n    }\n\n    if (user !== 'Choose a user') {\n      setSelectedUser(true);\n    } else {\n      setSelectedUser(false);\n    }\n  }, [newTitle, selectedUser]);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            className=\"input is-rounded\"\n            data-cy=\"titleInput\"\n            placeholder=\"Name the todo\"\n            value={task}\n            onChange={(e) => {\n              setTask(e.currentTarget.value);\n              setNewTitle(true);\n              setHasTitleError(false);\n            }}\n          />\n          {hasTitleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            className=\"select is-rounded\"\n            value={user}\n            onChange={(e) => {\n              setUser(e.currentTarget.value);\n              setSelectedUser(true);\n              setHasUserError(false);\n            }}\n          >\n            <option value=\"\">Choose a user</option>\n            {usersFromServer.map(el => (\n              <option\n                key={el.id}\n                value={el.name}\n              >\n                {el.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"button is-rounded\"\n          data-cy=\"submitButton\"\n          onClick={(e) => {\n            e.preventDefault();\n            handleAdd();\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}